{"version":3,"sources":["components/Person.js","components/Persons.js","components/NewEntry.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","serviceWorker.js","index.js"],"names":["Person","props","person","react_default","a","createElement","name","number","onClick","window","confirm","deleteName","id","Persons","_ref","persons","filter","p","toLowerCase","indexOf","map","components_Person","key","NewEntry","_props$stateAndEventH","stateAndEventHandlers","newName","newNumber","handleNameChange","handleNumberChange","addName","value","onChange","type","Filter","handleFilterChange","Notification","message","console","log","className","class","baseUrl","services_persons","axios","get","then","response","data","newObject","post","put","concat","delete","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","notification","setNotification","loadPersons","personService","useEffect","setTimeout","event","target","preventDefault","find","n","changedPerson","objectSpread","returnedPerson","catch","error","newPersonObject","components_Notification","components_Filter","components_NewEntry","components_Persons","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8feaf437.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = (props) => { \r\n\r\n    const deleteId = (person) => {\r\n        \r\n\r\n        return () => {\r\n            let confirmationOfDelete = window.confirm('Poista ' + person.name + ' ?');\r\n\r\n            if (confirmationOfDelete) {\r\n                props.deleteName(person.id)\r\n            } \r\n            \r\n        }\r\n    }\r\n   \r\n\r\n    return(<li>{props.person.name} {props.person.number}    <button onClick={ deleteId(props.person) }>Poista</button></li>)\r\n}\r\n\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, filter, deleteName }) => {\r\n\r\n\r\n    persons = persons.filter((p) => p.name.toLowerCase().indexOf(filter.toLowerCase())>-1)\r\n\r\n    return(\r\n        <ul>\r\n        { persons.map(p => <Person key={p.id }person={p} deleteName={deleteName}></Person> ) }\r\n        </ul>)\r\n}\r\n\r\n\r\nexport default Persons","import React from 'react'\r\n\r\n\r\n\r\n\r\nconst NewEntry = (props) => {\r\n\r\n    const {newName, newNumber, handleNameChange, handleNumberChange, addName } = props.stateAndEventHandlers\r\n   \r\n\r\n\r\n\r\n    return(\r\n        <form>\r\n        <div>\r\n          nimi: <input value={newName}  onChange={handleNameChange} />\r\n        </div>\r\n        <div>numero: <input value={newNumber}  onChange={handleNumberChange} /></div>\r\n        \r\n        <div>\r\n          <button type=\"submit\" onClick={ addName }>lisää</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\n\r\nexport default NewEntry\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => { \r\n\r\n    const {handleFilterChange, filter } = props.stateAndEventHandlers\r\n   \r\n \r\n\r\n    return(\r\n        \r\n        <div>\r\n          rajaa näytettäviä: <input value={filter}  onChange={handleFilterChange} />\r\n        </div>\r\n       \r\n      \r\n    )\r\n}\r\n\r\n\r\nexport default Filter","\r\nimport React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    \r\n    if (message === null) {\r\n      return null\r\n    }\r\n    console.log('note',message)\r\n    return (\r\n      <div className={message.class}>\r\n        {message.message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteResource = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll, \r\n  create, \r\n  update,\r\n  deleteResource \r\n}","import React, { useState, useEffect  } from 'react'\r\nimport Persons from './components/Persons'\r\nimport NewEntry from './components/NewEntry';\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n   \r\n    const [ persons, setPersons] = useState([])\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ filter, setFilter ] = useState('')\r\n    const [ notification, setNotification ] = useState(null)\r\n\r\n    // Effect hook\r\n    const loadPersons = () => {\r\n        \r\n        personService\r\n            .getAll()\r\n            .then(data =>  setPersons(data)   )\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadPersons()\r\n    }, [])\r\n\r\n    // Add name\r\n\r\n    const addName = (event) => {\r\n       \r\n        event.preventDefault();\r\n        \r\n       const person = persons.find(n => n.name === newName)\r\n       if (person) {\r\n\r\n            let confirmReplacement = window.confirm(`${newName} on jo listassa. Korvataanko puhelinnumero?`)\r\n\r\n            if (confirmReplacement) {\r\n\r\n                const changedPerson = { ...person, number: newNumber }\r\n                const id = person.id\r\n\r\n                personService.update(id, changedPerson)\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.map(p => p.id !== id ? p : returnedPerson))\r\n                    })\r\n                    .catch(error => { console.log(error) ;setNotification({ message: `Nimeä ${changedPerson.name} ei löydy`, class: 'error' }) })\r\n\r\n            }\r\n            \r\n        } else {\r\n\r\n            let newPersonObject = { name: newName ,number: newNumber}\r\n\r\n            personService\r\n                .create(newPersonObject)\r\n                .then(data => {\r\n                    setPersons(persons.concat(data));\r\n                    setNotification({ message: `Lisätty ${newPersonObject.name} puhelinluetteloon`, class: 'success' })\r\n                }).catch(error => { console.log(error.response.data.error) ;setNotification({ message: ` ${error.response.data.error}`, class: 'error' }) })\r\n                \r\n\r\n        }\r\n        handleNameChange({ target: { value: ''}}) // Pseudoeventti jotta input tyhjenee\r\n        handleNumberChange({ target: { value: ''}}) // Pseudoeventti jotta input tyhjenee\r\n\r\n    }\r\n    // Effect to fade notification away after x seconds\r\n    useEffect(() => {\r\n        setTimeout(() =>  setNotification(null) ,4000)\r\n    }, [notification])\r\n\r\n   \r\n    // Delete name\r\n\r\n    const deleteName = (id) => {\r\n        personService\r\n            .deleteResource(id)\r\n            .then(() => loadPersons())\r\n            .then(() => setNotification({ message: `Poistettu`, class: 'error' }))\r\n    }\r\n\r\n    const handleNameChange = (event) => (      setNewName(event.target.value) ) \r\n    const handleNumberChange = (event) => (    setNewNumber(event.target.value) ) \r\n    const handleFilterChange = (event) => (    setFilter(event.target.value) ) \r\n    \r\n\r\n    const stateAndEventHandlers =   { newName, newNumber, handleNameChange, handleNumberChange,  persons, setPersons, addName, deleteName }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <h2>Puhelinluettelo</h2>\r\n        <Notification message={notification}></Notification>\r\n        <Filter stateAndEventHandlers={ { filter, handleFilterChange }}></Filter>\r\n        <h3>Lisää uusi</h3>\r\n        <NewEntry stateAndEventHandlers={  stateAndEventHandlers }></NewEntry>\r\n        <h3>Numerot</h3>\r\n        <Persons persons={persons } filter ={ filter } deleteName={ deleteName }></Persons>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}